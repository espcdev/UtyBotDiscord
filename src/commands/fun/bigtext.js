// src/commands/fun/bigtext.js
const { SlashCommandBuilder } = require('discord.js');
const { createErrorEmbed } = require('../../utils/embeds');

// Mapeo de caracteres a emojis regionales/n√∫meros/s√≠mbolos
const regionalMap = {
    'a': 'üá¶', 'b': 'üáß', 'c': 'üá®', 'd': 'üá©', 'e': 'üá™', 'f': 'üá´', 'g': 'üá¨',
    'h': 'üá≠', 'i': 'üáÆ', 'j': 'üáØ', 'k': 'üá∞', 'l': 'üá±', 'm': 'üá≤', 'n': 'üá≥',
    'o': 'üá¥', 'p': 'üáµ', 'q': 'üá∂', 'r': 'üá∑', 's': 'üá∏', 't': 'üáπ',
    'u': 'üá∫', 'v': 'üáª', 'w': 'üáº', 'x': 'üáΩ', 'y': 'üáæ', 'z': 'üáø',
    '0': '0Ô∏è‚É£', '1': '1Ô∏è‚É£', '2': '2Ô∏è‚É£', '3': '3Ô∏è‚É£', '4': '4Ô∏è‚É£',
    '5': '5Ô∏è‚É£', '6': '6Ô∏è‚É£', '7': '7Ô∏è‚É£', '8': '8Ô∏è‚É£', '9': '9Ô∏è‚É£',
    '!': '‚ùó', '?': '‚ùì', '#': '#Ô∏è‚É£', '*': '*Ô∏è‚É£', '$': 'üí≤', '+': '‚ûï', '-': '‚ûñ',
    ' ': '  ' // Espacio doble para separar palabras
};

module.exports = {
    data: new SlashCommandBuilder()
        .setName('bigtext')
        .setDescription('Convierte tu texto en letras grandes usando emojis.')
        .addStringOption(option =>
            option.setName('texto')
                .setDescription('El texto a convertir (solo letras A-Z, n√∫meros y !?#*+-).')
                .setRequired(true)
                .setMaxLength(50)), // Limitar para evitar spam
    async execute(interaction) {
        const text = interaction.options.getString('texto').toLowerCase();
        let bigText = '';

        for (const char of text) {
            if (regionalMap[char]) {
                bigText += regionalMap[char] + ' '; // A√±adir espacio entre letras emoji
            } else {
                // Si el caracter no est√° en el mapa, no lo a√±adimos o ponemos un placeholder
                // bigText += ' '; // O simplemente ignorar
            }
        }

        if (!bigText.trim()) {
            return interaction.reply({ embeds: [createErrorEmbed('El texto no contiene caracteres convertibles (A-Z, 0-9, !?#*+-).')], ephemeral: true });
        }

        // Enviar como mensaje normal (no embed)
        await interaction.reply({ content: bigText.trim() });
    }
};
